@model ChangePasswordVm

@{
    ViewBag.Title = "Change Password";
}

<!--Page Header-->
<div class="header">
    <div class="header-content">
        <div class="page-title">
            <i class="icon-briefcase position-left"></i>Create Project
        </div>
        <ul class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Dashboard")"></a>
            </li>
            <li>
                <a href="@Url.Action("Index", "Dashboard")">Dashboard</a>
            </li>
            <li class="active">Change Password</li>
        </ul>
    </div>
</div>
<!--/Page Header-->
<!-- /Page header -->
@using (Html.BeginForm("ChangePassword", "Users", FormMethod.Post, new {@class = "form-horizontal", id = "frmChangePassword", enctype = "multipart/form-data"}))
{
    <div class="container-fluid page-content">
        <div class="row">
            <div class="col-md-12 col-sm-12">
                <div class="panel panel-flat">
                    <div class="panel panel-flat border-left-lg border-left-info">
                        <div class="panel-heading">
                            <h5 class="panel-title"><span class="text-semibold">Change</span> password</h5>
                        </div>
                    </div>

                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6 col-md-offset-3">
                                <div class="form-group">
                                    <label class="control-label">Old Password : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.PasswordFor(s => s.OldPassword, new {@class = "form-control", placeholder = "XXXXXX"})
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br/>
                        <div class="row">
                            <div class="col-md-6 col-md-offset-3">
                                <div class="form-group">
                                    <label class="control-label">New Password : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.PasswordFor(s => s.NewPassword, new {@class = "form-control", placeholder = "XXXXXX"})
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br/>
                        <div class="row">
                            <div class="col-md-6 col-md-offset-3">
                                <div class="form-group">
                                    <label class="control-label">Confirm Password : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.PasswordFor(s => s.ConfirmPassword, new {@class = "form-control", placeholder = "XXXXXX"})
                                    </div>
                                </div>
                            </div>
                        </div>
                        <br/>
                        <div class="row">
                            <hr/>
                            <div class="col-md-6 col-md-offset-3">
                                <button type="submit" class="btn btn-primary">Submit</button>
                                <button type="button" class="btn btn-default">Cancel</button>

                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
}


@section scripts{
    <script>
        $(document).ready(function() {

            // Primary file input
            $(".file-styled-primary").uniform({
                wrapperClass: 'bg-primary',
                fileButtonHtml: 'Browse'
            });

            //Form validation HERE
            $("#frmChangePassword").validate({
                rules: {
                    OldPassword: {
                        required: true
                    },
                    NewPassword: {
                        required: true
                    },
                    ConfirmPassword: {
                        required: true,
                        equalTo: "#NewPassword"
                    }
                },
                ignore: 'input[type=hidden], .select2-search__field',
                errorClass: 'validation-error',
                highlight: function(element, errorClass) {
                    $(element).removeClass(errorClass);
                },
                unhighlight: function(element, errorClass) {
                    $(element).removeClass(errorClass);
                },
                errorPlacement: function(error, element) {
                    if (element.parents('div').hasClass("checker") ||
                        element.parents('div').hasClass("choice") ||
                        element.parent().hasClass('bootstrap-switch-container')) {
                        if (element.parents('label').hasClass('checkbox-inline') ||
                            element.parents('label').hasClass('radio-inline')) {
                            error.appendTo(element.parent().parent().parent().parent());
                        } else {
                            error.appendTo(element.parent().parent().parent().parent().parent());
                        }
                    } else if (element.parents('div').hasClass('has-feedback') ||
                        element.hasClass('select2-hidden-accessible')) {
                        error.appendTo(element.parent());
                    } else if (element.parents('label').hasClass('checkbox-inline') ||
                        element.parents('label').hasClass('radio-inline') ||
                        element.parents('div').hasClass('checkbox-single')) {
                        error.appendTo(element.parent().parent());
                    } else if (element.parents('div').hasClass('checkbox-group')) {
                        error.appendTo(element.parent().parent().parent());
                    } else if (element.parent().hasClass('uploader') || element.parents().hasClass('input-group')) {
                        error.appendTo(element.parent().parent());
                    } else {
                        error.insertAfter(element);
                    }
                },
                validClass: "validation-success"
            });
        });
    </script>
}