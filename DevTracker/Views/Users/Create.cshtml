@using DevTracker.WebHelpers
@model UserMaster

@{
    ViewBag.Title = "User";
    var userTitle = Model.UserMasterId > 0 ? "Edit User" : "Creata User";
}

<!--Page Header-->
<div class="header">
    <div class="header-content">
        <div class="page-title">
            <i class="icon-briefcase position-left"></i> @userTitle
        </div>
        <ul class="breadcrumb">
            <li><a href="@Url.Action("Index", "Dashboard")"></a></li>
            <li><a href="@Url.Action("Index", "Dashboard")">Dashboard</a></li>
            <li class="active">@userTitle</li>
        </ul>
    </div>
</div>
<!--/Page Header-->
<!-- /Page header -->
@using (Html.BeginForm("Create", "Users", FormMethod.Post, new { @class = "form-horizontal", @id = "frmUsers", @enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(s => s.UserMasterId)
    <div class="container-fluid page-content">
        <div class="row">
            <div class="col-md-12 col-sm-12">
                <div class="panel panel-flat">
                    <div class="panel panel-flat border-left-lg border-left-info">
                        <div class="panel-heading">
                            <h5 class="panel-title"><span class="text-semibold">User</span> information</h5>
                        </div>
                    </div>

                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Full Name : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.TextBoxFor(s => s.Name, new { @class = "form-control", @placeholder = "Joe Smith" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Email : <span class="text-warning">*</span></label>
                                    @if (Model.UserMasterId > 0)
                                    {
                                        <div class="">
                                            @Html.TextBoxFor(s => s.Email, new { @class = "form-control", @placeholder = "abc@xyz.com", @disabled = "disabled" })
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="">
                                            @Html.TextBoxFor(s => s.Email, new { @class = "form-control", @placeholder = "abc@xyz.com" })
                                        </div>
                                    }

                                   
                                    @if (Model.UserMasterId == 0)
                                    {
                                        <small class="text-danger">*Password is autogenerated & it will be send to this email address.</small>
                                    }
                                </div>
                            </div>
                        </div>

                        <br />
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Select Role : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.DropDownListFor(s => s.RoleMasterId, SelectListFunction.GetRoles(Model.RoleMasterId), new { @class = "select" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Mobile Number : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.TextBoxFor(s => s.Mobile, new { @class = "form-control", @placeholder = "99xxxxxxxx" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Company Name : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.TextBoxFor(s => s.CompanyName, new { @class = "form-control", @placeholder = "Microsoft" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Skype Id : </label>
                                    <div class="">
                                        @Html.TextBoxFor(s => s.SkypeId, new { @class = "form-control", @placeholder = "skype" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br />
                        <div class="row">
                            <hr />
                            <div class="col-md-12">
                                <button type="submit" class="btn btn-primary">Save</button>
                                <button type="button" class="btn btn-default">Cancel</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@section scripts{
    <script>
        $(document).ready(function() {
            //Validation goes HERE
            // Primary file input
            $(".file-styled-primary").uniform({
                wrapperClass: 'bg-primary',
                fileButtonHtml: 'Browse'
            });

            //Form validation HERE
            $("#frmUsers").validate({
                rules: {
                    Name: {
                        required: true
                    },
                    Email: {
                        required: true,
                        email: true
                    },
                    Mobile: {
                        required: true,
                        number: true,
                        maxlength: 10,
                        minlength: 10
                    },
                    CompanyName: {
                        required: true
                    }
                    
                },
                ignore: 'input[type=hidden], .select2-search__field',
                errorClass: 'validation-error',
                highlight: function(element, errorClass) {
                    $(element).removeClass(errorClass);
                },
                unhighlight: function(element, errorClass) {
                    $(element).removeClass(errorClass);
                },
                errorPlacement: function(error, element) {
                    if (element.parents('div').hasClass("checker") || element.parents('div').hasClass("choice") || element.parent().hasClass('bootstrap-switch-container')) {
                        if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                            error.appendTo(element.parent().parent().parent().parent());
                        } else {
                            error.appendTo(element.parent().parent().parent().parent().parent());
                        }
                    } else if (element.parents('div').hasClass('has-feedback') || element.hasClass('select2-hidden-accessible')) {
                        error.appendTo(element.parent());
                    } else if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline') || element.parents('div').hasClass('checkbox-single')) {
                        error.appendTo(element.parent().parent());
                    } else if (element.parents('div').hasClass('checkbox-group')) {
                        error.appendTo(element.parent().parent().parent());
                    } else if (element.parent().hasClass('uploader') || element.parents().hasClass('input-group')) {
                        error.appendTo(element.parent().parent());
                    } else {
                        error.insertAfter(element);
                    }
                },
                validClass: "validation-success"
            });
        });
    </script>
}