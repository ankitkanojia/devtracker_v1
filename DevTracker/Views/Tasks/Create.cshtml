@model TaskVm

@{
    ViewBag.Title = "Create Task";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Page header -->
<div class="header">
    <div class="header-content">
        <div class="page-title">
            <i class="icon-file-text position-left"></i> Task
        </div>
        <ul class="breadcrumb">
            <li>
                <a href="@Url.Action("Index", "Dashboard")"></a>
            </li>
            <li>
                <a href="@Url.Action("Index", "Dashboard")">Dashboard</a>
            </li>
            <li class="active">Create Task</li>
        </ul>
    </div>
</div>
<!-- /Page header -->
@using (Html.BeginForm("Create", "Tasks", FormMethod.Post, new {@class = "form-horizontal", id = "frmTask", enctype = "multipart/form-data"}))
{
    <div class="container-fluid page-content">
        <div class="row">
            <div class="col-md-12 col-sm-12">
                <div class="panel panel-flat">
                    <div class="panel panel-flat border-left-lg border-left-info">
                        <div class="panel-heading">
                            <h5 class="panel-title"><span class="text-semibold">Basic</span> information</h5>
                        </div>
                    </div>

                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Select Project : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.DropDownListFor(s => s.ProjectId, SelectListFunction.GetProjects(Model.ProjectId), new {@class = "select"})
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Task Title : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.TextBoxFor(s => s.Title, new {@class = "form-control", placeholder = "Create a logo design"})
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br/>
                        <div class="row">
                            <div class="col-md-6">
                                <label class="control-label">Select Task Type : <span class="text-warning">*</span></label>
                                <div class="">
                                    @Html.DropDownListFor(s => s.TaskTypeMasterId, SelectListFunction.GetTaskType(Model.TaskTypeMasterId), new {@class = "select"})
                                </div>
                            </div>

                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Select Task Category : <span class="text-warning">*</span></label>
                                    <div class="">
                                        @Html.DropDownListFor(s => s.TaskCategoryId, SelectListFunction.GetTaskCategory(Model.ProjectId), new {@class = "select"})
                                    </div>
                                </div>
                            </div>
                        </div>

                        <br/>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label class="control-label">Basic description : <span class="text-warning">*</span></label>
                                    @Html.TextAreaFor(s => s.Description, new {@class = "basic-editor"})
                                </div>
                            </div>
                        </div>
                    </div>


                    <br/>
                    <div class="panel panel-flat">
                        <div class="panel panel-flat border-left-lg border-left-info">
                            <div class="panel-heading">
                                <h5 class="panel-title"><span class="text-semibold">Other</span> description</h5>
                            </div>
                        </div>

                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Select Assigny : <span class="text-warning">*</span></label>
                                        <div class="">
                                            @Html.DropDownListFor(s => s.AssignyId, SelectListFunction.GetUsers(Model.AssignyId), new {@class = "select"})
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Select Reporter : <span class="text-warning">*</span></label>
                                        <div class="">
                                            @Html.DropDownListFor(s => s.ReporterId, SelectListFunction.GetUsers(Model.ReporterId), new {@class = "select"})
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <br/>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Select Priority : <span class="text-warning">*</span></label>
                                        <div class="">
                                            @Html.DropDownListFor(s => s.PriorityMasterId, SelectListFunction.GetPriority(Model.PriorityMasterId), new {@class = "select"})
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Select Task Status : <span class="text-warning">*</span></label>
                                        <div class="">
                                            @Html.DropDownListFor(s => s.TaskStatusMasterId, SelectListFunction.GetTaskStatus(Model.TaskStatusMasterId), new {@class = "select"})
                                        </div>
                                    </div>
                                </div>
                            </div>


                            <br/>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Project start-date : <span class="text-warning">*</span></label>
                                        <div class="input-group">
                                            <span class="input-group-addon bg-primary">
                                                <i class="icon-calendar"></i>
                                            </span>
                                            @Html.TextBoxFor(s => s.StartDateString, new {@class = "form-control datepicker-here", data_language = "en", placeholder = "dd/mm/yyyy"})
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Completion Goal Date : </label>
                                        <div class="input-group">
                                            <span class="input-group-addon bg-primary">
                                                <i class="icon-calendar"></i>
                                            </span>
                                            @Html.TextBoxFor(s => s.EndDateString, new {@class = "form-control datepicker-here", data_language = "en", placeholder = "dd/mm/yyyy"})
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <br/>
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Estimate hours : </label>
                                        <div class="input-group">
                                            @Html.TextBoxFor(s => s.EstimateTimeHours, new {@class = "form-control", placeholder = "200"})
                                            <span class="input-group-addon">Hours</span>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <br/>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <label class="control-label">File attachment : </label>
                                        <input id="AttachedFiles" name="AttachedFiles" type="file" multiple>
                                        <small class="text-danger">You can upload multiple file upto 50 MB</small>
                                    </div>
                                </div>
                            </div>

                            <br/>
                            <div class="row">
                                <hr/>
                                <div class="col-md-12">

                                    <button type="submit" class="btn btn-primary">Create a task</button>
                                    <button type="button" class="btn btn-default">Cancel</button>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section scripts{
    <script src="~/Content/lib/js/pages/forms/form_select2.js"></script>
    <script src="~/Content/lib/assets/editors/tinymce/tinymce.min.js"></script>
    <script src="~/Content/lib/js/forms/datepicker.min.js"></script>
    <script src="~/Content/lib/js/forms/datepicker.en.js"></script>
    <script src="~/Content/lib/js/plugins/uploaders/bootstrap-uploader/bootstrap-uploader.js"></script>

    <Script>
        $(document).ready(function() {
            //File uploader
            $("#AttachedFiles").fileinput({
                showUpload: false,
                showCaption: false,
                browseClass: "btn btn-primary",
                fileType: "any",
                previewFileIcon: "<i class='icon-crown'></i>"
            });


            tinymce.init({
                selector: '.basic-editor',
                height: 200,
                menubar: false,
                toolbar:
                    'insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
                content_css: [
                    '//fast.fonts.net/cssapi/e6dc9b99-64fe-4292-ad98-6974f93cd2a2.css',
                    '//www.tinymce.com/css/codepen.min.css'
                ]
            });

            //Validation goes HERE
            // Primary file input
            $(".file-styled-primary").uniform({
                wrapperClass: 'bg-primary',
                fileButtonHtml: 'Browse'
            });

            //Form validation HERE
            $("#frmTask").validate({
                rules: {
                    Title: {
                        required: true
                    },
                    Description: {
                        required: true
                    },
                    StartDateString: {
                        required: true
                    }
                },
                ignore: 'input[type=hidden], .select2-search__field',
                errorClass: 'validation-error',
                highlight: function(element, errorClass) {
                    $(element).removeClass(errorClass);
                },
                unhighlight: function(element, errorClass) {
                    $(element).removeClass(errorClass);
                },
                errorPlacement: function(error, element) {
                    if (element.parents('div').hasClass("checker") ||
                        element.parents('div').hasClass("choice") ||
                        element.parent().hasClass('bootstrap-switch-container')) {
                        if (element.parents('label').hasClass('checkbox-inline') ||
                            element.parents('label').hasClass('radio-inline')) {
                            error.appendTo(element.parent().parent().parent().parent());
                        } else {
                            error.appendTo(element.parent().parent().parent().parent().parent());
                        }
                    } else if (element.parents('div').hasClass('has-feedback') ||
                        element.hasClass('select2-hidden-accessible')) {
                        error.appendTo(element.parent());
                    } else if (element.parents('label').hasClass('checkbox-inline') ||
                        element.parents('label').hasClass('radio-inline') ||
                        element.parents('div').hasClass('checkbox-single')) {
                        error.appendTo(element.parent().parent());
                    } else if (element.parents('div').hasClass('checkbox-group')) {
                        error.appendTo(element.parent().parent().parent());
                    } else if (element.parent().hasClass('uploader') || element.parents().hasClass('input-group')) {
                        error.appendTo(element.parent().parent());
                    } else {
                        error.insertAfter(element);
                    }
                },
                validClass: "validation-success"
            });
        });
    </Script>
}