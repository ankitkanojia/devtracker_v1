@model RecoverPasswordVm

@{
    ViewBag.Title = "ForgotPassword";
    Layout = "~/Views/Shared/_BlankLayout.cshtml";
}

<div class="auth-module border-top-danger">
    <div class="form display-block">
        <h1 class="text-danger no-margin text-light">Recover password</h1>
        <p class="no-padding m-b-20">We'll send you instructions by email</p>


        @using (Html.BeginForm("RecoverPassword", "Home", FormMethod.Post, new { @id = "frmRecover", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                <div class="form-group has-feedback has-feedback-left">
                    @Html.TextBoxFor(s => s.Email, new { @class = "form-control", @placeholder = "abc@xyz.com" })
                    <div class="form-control-feedback">
                        <i class="icon-envelop"></i>
                    </div>
                </div>
                <button type="submit" class="btn btn-danger btn-block">Recover password</button>
                <br/>
                <a href="@Url.Action("Login", "Home")" class="btn btn-default btn-block">Yes! I remember my password.</a>
            </div>
        }
    </div>
</div>


@section Scripts
{
    <script>
        $(document).ready(function () {
            //Form validation HERE
            $("#frmRecover").validate({
                rules: {
                    Email: {
                        required: true,
                        email: true
                    }
                },
                ignore: 'input[type=hidden], .select2-search__field',
                errorClass: 'validation-error',
                highlight: function (element, errorClass) {
                    $(element).removeClass(errorClass);
                },
                unhighlight: function (element, errorClass) {
                    $(element).removeClass(errorClass);
                },
                errorPlacement: function (error, element) {
                    if (element.parents('div').hasClass("checker") || element.parents('div').hasClass("choice") || element.parent().hasClass('bootstrap-switch-container')) {
                        if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline')) {
                            error.appendTo(element.parent().parent().parent().parent());
                        } else {
                            error.appendTo(element.parent().parent().parent().parent().parent());
                        }
                    } else if (element.parents('div').hasClass('has-feedback') || element.hasClass('select2-hidden-accessible')) {
                        error.appendTo(element.parent());
                    } else if (element.parents('label').hasClass('checkbox-inline') || element.parents('label').hasClass('radio-inline') || element.parents('div').hasClass('checkbox-single')) {
                        error.appendTo(element.parent().parent());
                    } else if (element.parents('div').hasClass('checkbox-group')) {
                        error.appendTo(element.parent().parent().parent());
                    } else if (element.parent().hasClass('uploader') || element.parents().hasClass('input-group')) {
                        error.appendTo(element.parent().parent());
                    } else {
                        error.insertAfter(element);
                    }
                },
                validClass: "validation-success"
            });
         
        });
</script>
}
